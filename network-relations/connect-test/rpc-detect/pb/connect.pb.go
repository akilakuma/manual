// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connect.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConnRequest struct {
	Rand                 int32    `protobuf:"varint,1,opt,name=rand,proto3" json:"rand,omitempty"`
	TimeAt               string   `protobuf:"bytes,2,opt,name=time_at,json=timeAt,proto3" json:"time_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnRequest) Reset()         { *m = ConnRequest{} }
func (m *ConnRequest) String() string { return proto.CompactTextString(m) }
func (*ConnRequest) ProtoMessage()    {}
func (*ConnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_connect_8a8c2d465d75b0e0, []int{0}
}
func (m *ConnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnRequest.Unmarshal(m, b)
}
func (m *ConnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnRequest.Marshal(b, m, deterministic)
}
func (dst *ConnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnRequest.Merge(dst, src)
}
func (m *ConnRequest) XXX_Size() int {
	return xxx_messageInfo_ConnRequest.Size(m)
}
func (m *ConnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnRequest proto.InternalMessageInfo

func (m *ConnRequest) GetRand() int32 {
	if m != nil {
		return m.Rand
	}
	return 0
}

func (m *ConnRequest) GetTimeAt() string {
	if m != nil {
		return m.TimeAt
	}
	return ""
}

type ConnResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnResponse) Reset()         { *m = ConnResponse{} }
func (m *ConnResponse) String() string { return proto.CompactTextString(m) }
func (*ConnResponse) ProtoMessage()    {}
func (*ConnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_connect_8a8c2d465d75b0e0, []int{1}
}
func (m *ConnResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnResponse.Unmarshal(m, b)
}
func (m *ConnResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnResponse.Marshal(b, m, deterministic)
}
func (dst *ConnResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnResponse.Merge(dst, src)
}
func (m *ConnResponse) XXX_Size() int {
	return xxx_messageInfo_ConnResponse.Size(m)
}
func (m *ConnResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnResponse proto.InternalMessageInfo

func (m *ConnResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*ConnRequest)(nil), "pb.ConnRequest")
	proto.RegisterType((*ConnResponse)(nil), "pb.ConnResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnectClient is the client API for Connect service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectClient interface {
	Ping(ctx context.Context, in *ConnRequest, opts ...grpc.CallOption) (*ConnResponse, error)
}

type connectClient struct {
	cc *grpc.ClientConn
}

func NewConnectClient(cc *grpc.ClientConn) ConnectClient {
	return &connectClient{cc}
}

func (c *connectClient) Ping(ctx context.Context, in *ConnRequest, opts ...grpc.CallOption) (*ConnResponse, error) {
	out := new(ConnResponse)
	err := c.cc.Invoke(ctx, "/pb.Connect/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnectServer is the server API for Connect service.
type ConnectServer interface {
	Ping(context.Context, *ConnRequest) (*ConnResponse, error)
}

func RegisterConnectServer(s *grpc.Server, srv ConnectServer) {
	s.RegisterService(&_Connect_serviceDesc, srv)
}

func _Connect_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Connect/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).Ping(ctx, req.(*ConnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Connect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Connect",
	HandlerType: (*ConnectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Connect_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connect.proto",
}

func init() { proto.RegisterFile("connect.proto", fileDescriptor_connect_8a8c2d465d75b0e0) }

var fileDescriptor_connect_8a8c2d465d75b0e0 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0xcb,
	0x4b, 0x4d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xb2, 0xe2,
	0xe2, 0x76, 0xce, 0xcf, 0xcb, 0x0b, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62,
	0x29, 0x4a, 0xcc, 0x4b, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x02, 0xb3, 0x85, 0xc4, 0xb9,
	0xd8, 0x4b, 0x32, 0x73, 0x53, 0xe3, 0x13, 0x4b, 0x24, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xd8,
	0x40, 0x5c, 0xc7, 0x12, 0x25, 0x35, 0x2e, 0x1e, 0x88, 0xde, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54,
	0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0xa8, 0x76, 0x28, 0xcf, 0xc8, 0x8c,
	0x8b, 0xdd, 0x19, 0x62, 0xb1, 0x90, 0x36, 0x17, 0x4b, 0x40, 0x66, 0x5e, 0xba, 0x10, 0xbf, 0x5e,
	0x41, 0x92, 0x1e, 0x92, 0xc5, 0x52, 0x02, 0x08, 0x01, 0x88, 0x69, 0x4a, 0x0c, 0x49, 0x6c, 0x60,
	0x67, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x7f, 0x95, 0x40, 0xb7, 0x00, 0x00, 0x00,
}
